# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/packet.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13protos/packet.proto\x12\x06packet\"B\n\x06Packet\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x15\n\rfrom_hostname\x18\x02 \x01(\t\x12\x13\n\x0bto_hostname\x18\x03 \x01(\t\">\n\tPacketAck\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x0e\n\x06\x61\x63tion\x18\x02 \x01(\r\x12\x13\n\x0bsend_amount\x18\x03 \x01(\r\"\xa5\x01\n\x11ValidatorNodeInfo\x12\x10\n\x08hostname\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x16\n\x0evalidation_key\x18\x03 \x01(\t\x12\x1e\n\x16validation_private_key\x18\x04 \x01(\t\x12\x1d\n\x15validation_public_key\x18\x05 \x01(\t\x12\x17\n\x0fvalidation_seed\x18\x06 \x01(\t\"&\n\x14ValidatorNodeInfoAck\x12\x0e\n\x06status\x18\x01 \x01(\t\"\x0b\n\tGetConfig\"\x1a\n\tPartition\x12\r\n\x05nodes\x18\x01 \x03(\r\"\x90\x01\n\x06\x43onfig\x12\x17\n\x0fhostname_prefix\x18\x01 \x01(\t\x12\x17\n\x0fnumber_of_nodes\x18\x02 \x01(\r\x12)\n\x0enet_partitions\x18\x03 \x03(\x0b\x32\x11.packet.Partition\x12)\n\x0eunl_partitions\x18\x04 \x03(\x0b\x32\x11.packet.Partition2\xc9\x01\n\rPacketService\x12\x30\n\x0bsend_packet\x12\x0e.packet.Packet\x1a\x11.packet.PacketAck\x12U\n\x18send_validator_node_info\x12\x19.packet.ValidatorNodeInfo\x1a\x1c.packet.ValidatorNodeInfoAck(\x01\x12/\n\nget_config\x12\x11.packet.GetConfig\x1a\x0e.packet.Configb\x06proto3')



_PACKET = DESCRIPTOR.message_types_by_name['Packet']
_PACKETACK = DESCRIPTOR.message_types_by_name['PacketAck']
_VALIDATORNODEINFO = DESCRIPTOR.message_types_by_name['ValidatorNodeInfo']
_VALIDATORNODEINFOACK = DESCRIPTOR.message_types_by_name['ValidatorNodeInfoAck']
_GETCONFIG = DESCRIPTOR.message_types_by_name['GetConfig']
_PARTITION = DESCRIPTOR.message_types_by_name['Partition']
_CONFIG = DESCRIPTOR.message_types_by_name['Config']
Packet = _reflection.GeneratedProtocolMessageType('Packet', (_message.Message,), {
  'DESCRIPTOR' : _PACKET,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.Packet)
  })
_sym_db.RegisterMessage(Packet)

PacketAck = _reflection.GeneratedProtocolMessageType('PacketAck', (_message.Message,), {
  'DESCRIPTOR' : _PACKETACK,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.PacketAck)
  })
_sym_db.RegisterMessage(PacketAck)

ValidatorNodeInfo = _reflection.GeneratedProtocolMessageType('ValidatorNodeInfo', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATORNODEINFO,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.ValidatorNodeInfo)
  })
_sym_db.RegisterMessage(ValidatorNodeInfo)

ValidatorNodeInfoAck = _reflection.GeneratedProtocolMessageType('ValidatorNodeInfoAck', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATORNODEINFOACK,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.ValidatorNodeInfoAck)
  })
_sym_db.RegisterMessage(ValidatorNodeInfoAck)

GetConfig = _reflection.GeneratedProtocolMessageType('GetConfig', (_message.Message,), {
  'DESCRIPTOR' : _GETCONFIG,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.GetConfig)
  })
_sym_db.RegisterMessage(GetConfig)

Partition = _reflection.GeneratedProtocolMessageType('Partition', (_message.Message,), {
  'DESCRIPTOR' : _PARTITION,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.Partition)
  })
_sym_db.RegisterMessage(Partition)

Config = _reflection.GeneratedProtocolMessageType('Config', (_message.Message,), {
  'DESCRIPTOR' : _CONFIG,
  '__module__' : 'protos.packet_pb2'
  # @@protoc_insertion_point(class_scope:packet.Config)
  })
_sym_db.RegisterMessage(Config)

_PACKETSERVICE = DESCRIPTOR.services_by_name['PacketService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PACKET._serialized_start=31
  _PACKET._serialized_end=97
  _PACKETACK._serialized_start=99
  _PACKETACK._serialized_end=161
  _VALIDATORNODEINFO._serialized_start=164
  _VALIDATORNODEINFO._serialized_end=329
  _VALIDATORNODEINFOACK._serialized_start=331
  _VALIDATORNODEINFOACK._serialized_end=369
  _GETCONFIG._serialized_start=371
  _GETCONFIG._serialized_end=382
  _PARTITION._serialized_start=384
  _PARTITION._serialized_end=410
  _CONFIG._serialized_start=413
  _CONFIG._serialized_end=557
  _PACKETSERVICE._serialized_start=560
  _PACKETSERVICE._serialized_end=761
# @@protoc_insertion_point(module_scope)
